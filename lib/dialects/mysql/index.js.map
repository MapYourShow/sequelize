{
  "version": 3,
  "sources": ["../../../src/dialects/mysql/index.js"],
  "sourcesContent": ["'use strict';\r\n\r\nimport { createUnspecifiedOrderedBindCollector } from '../../utils/sql';\r\nimport { AbstractDialect } from '../abstract';\r\n\r\nconst _ = require('lodash');\r\nconst { MySqlConnectionManager } = require('./connection-manager');\r\nconst { MySqlQuery } = require('./query');\r\nconst { MySqlQueryGenerator } = require('./query-generator');\r\nconst DataTypes = require('../../data-types').mysql;\r\nconst { MySqlQueryInterface } = require('./query-interface');\r\n\r\nexport class MysqlDialect extends AbstractDialect {\r\n  static supports = _.merge(\r\n    _.cloneDeep(AbstractDialect.supports),\r\n    {\r\n      'VALUES ()': true,\r\n      'LIMIT ON UPDATE': true,\r\n      lock: true,\r\n      forShare: 'LOCK IN SHARE MODE',\r\n      settingIsolationLevelDuringTransaction: false,\r\n      inserts: {\r\n        ignoreDuplicates: ' IGNORE',\r\n        updateOnDuplicate: ' ON DUPLICATE KEY UPDATE',\r\n      },\r\n      index: {\r\n        collate: false,\r\n        length: true,\r\n        parser: true,\r\n        type: true,\r\n        using: 1,\r\n      },\r\n      constraints: {\r\n        dropConstraint: false,\r\n        check: false,\r\n      },\r\n      indexViaAlter: true,\r\n      indexHints: true,\r\n      NUMERIC: true,\r\n      GEOMETRY: true,\r\n      JSON: true,\r\n      REGEXP: true,\r\n    },\r\n  );\r\n\r\n  constructor(sequelize) {\r\n    super();\r\n    this.sequelize = sequelize;\r\n    this.connectionManager = new MySqlConnectionManager(this, sequelize);\r\n    this.queryGenerator = new MySqlQueryGenerator({\r\n      _dialect: this,\r\n      sequelize,\r\n    });\r\n    this.queryInterface = new MySqlQueryInterface(\r\n      sequelize,\r\n      this.queryGenerator,\r\n    );\r\n  }\r\n\r\n  createBindCollector() {\r\n    return createUnspecifiedOrderedBindCollector();\r\n  }\r\n}\r\n\r\nMysqlDialect.prototype.defaultVersion = '5.7.0'; // minimum supported version\r\nMysqlDialect.prototype.Query = MySqlQuery;\r\nMysqlDialect.prototype.QueryGenerator = MySqlQueryGenerator;\r\nMysqlDialect.prototype.DataTypes = DataTypes;\r\nMysqlDialect.prototype.name = 'mysql';\r\nMysqlDialect.prototype.TICK_CHAR = '`';\r\nMysqlDialect.prototype.TICK_CHAR_LEFT = MysqlDialect.prototype.TICK_CHAR;\r\nMysqlDialect.prototype.TICK_CHAR_RIGHT = MysqlDialect.prototype.TICK_CHAR;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iBAAsD;AACtD,sBAAgC;AAEhC,MAAM,IAAI,QAAQ,QAAQ;AAC1B,MAAM,EAAE,2BAA2B,QAAQ,sBAAsB;AACjE,MAAM,EAAE,eAAe,QAAQ,SAAS;AACxC,MAAM,EAAE,wBAAwB,QAAQ,mBAAmB;AAC3D,MAAM,YAAY,QAAQ,kBAAkB,EAAE;AAC9C,MAAM,EAAE,wBAAwB,QAAQ,mBAAmB;AAEpD,MAAM,qBAAqB,gCAAgB;AAAA,SACzC,WAAW,EAAE,MAClB,EAAE,UAAU,gCAAgB,QAAQ,GACpC;AAAA,IACE,aAAa;AAAA,IACb,mBAAmB;AAAA,IACnB,MAAM;AAAA,IACN,UAAU;AAAA,IACV,wCAAwC;AAAA,IACxC,SAAS;AAAA,MACP,kBAAkB;AAAA,MAClB,mBAAmB;AAAA,IACrB;AAAA,IACA,OAAO;AAAA,MACL,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ;AAAA,MACR,MAAM;AAAA,MACN,OAAO;AAAA,IACT;AAAA,IACA,aAAa;AAAA,MACX,gBAAgB;AAAA,MAChB,OAAO;AAAA,IACT;AAAA,IACA,eAAe;AAAA,IACf,YAAY;AAAA,IACZ,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,QAAQ;AAAA,EACV,CACF;AAAA,EAEA,YAAY,WAAW;AACrB,UAAM;AACN,SAAK,YAAY;AACjB,SAAK,oBAAoB,IAAI,uBAAuB,MAAM,SAAS;AACnE,SAAK,iBAAiB,IAAI,oBAAoB;AAAA,MAC5C,UAAU;AAAA,MACV;AAAA,IACF,CAAC;AACD,SAAK,iBAAiB,IAAI,oBACxB,WACA,KAAK,cACP;AAAA,EACF;AAAA,EAEA,sBAAsB;AACpB,WAAO,sDAAsC;AAAA,EAC/C;AACF;AAEA,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,QAAQ;AAC/B,aAAa,UAAU,iBAAiB;AACxC,aAAa,UAAU,YAAY;AACnC,aAAa,UAAU,OAAO;AAC9B,aAAa,UAAU,YAAY;AACnC,aAAa,UAAU,iBAAiB,aAAa,UAAU;AAC/D,aAAa,UAAU,kBAAkB,aAAa,UAAU;",
  "names": []
}
