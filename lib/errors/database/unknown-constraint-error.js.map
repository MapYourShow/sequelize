{
  "version": 3,
  "sources": ["../../../src/errors/database/unknown-constraint-error.ts"],
  "sourcesContent": ["import { useErrorCause } from '../../utils/deprecations.js';\r\nimport type { DatabaseErrorSubclassOptions } from '../database-error';\r\nimport DatabaseError from '../database-error';\r\n\r\ninterface UnknownConstraintErrorOptions {\r\n  constraint?: string;\r\n  fields?: Record<string, string | number>;\r\n  table?: string;\r\n}\r\n\r\n/**\r\n * Thrown when constraint name is not found in the database\r\n */\r\nclass UnknownConstraintError extends DatabaseError implements UnknownConstraintErrorOptions {\r\n  constraint: string | undefined;\r\n  fields: Record<string, string | number> | undefined;\r\n  table: string | undefined;\r\n\r\n  constructor(\r\n    options: UnknownConstraintErrorOptions & DatabaseErrorSubclassOptions = {},\r\n  ) {\r\n    if ('parent' in options) {\r\n      useErrorCause();\r\n    }\r\n\r\n    const parent = options.cause ?? options.parent ?? { sql: '', name: '', message: '' };\r\n\r\n    super(parent, { stack: options.stack });\r\n    this.name = 'SequelizeUnknownConstraintError';\r\n    this.constraint = options.constraint;\r\n    this.fields = options.fields;\r\n    this.table = options.table;\r\n  }\r\n}\r\n\r\nexport default UnknownConstraintError;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA8B;AAE9B,4BAA0B;AAW1B,MAAM,+BAA+B,8BAAuD;AAAA,EAC1F;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YACE,UAAwE,CAAC,GACzE;AACA,QAAI,YAAY,SAAS;AACvB,6CAAc;AAAA,IAChB;AAEA,UAAM,SAAS,QAAQ,SAAS,QAAQ,UAAU,EAAE,KAAK,IAAI,MAAM,IAAI,SAAS,GAAG;AAEnF,UAAM,QAAQ,EAAE,OAAO,QAAQ,MAAM,CAAC;AACtC,SAAK,OAAO;AACZ,SAAK,aAAa,QAAQ;AAC1B,SAAK,SAAS,QAAQ;AACtB,SAAK,QAAQ,QAAQ;AAAA,EACvB;AACF;AAEA,IAAO,mCAAQ;",
  "names": []
}
