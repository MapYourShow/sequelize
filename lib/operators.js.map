{
  "version": 3,
  "sources": ["../src/operators.ts"],
  "sourcesContent": ["interface OpTypes {\r\n  /**\r\n   * Operator -|- (PG range is adjacent to operator)\r\n   *\r\n   * ```js\r\n   * [Op.adjacent]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * -|- [1, 2)\r\n   * ```\r\n   */\r\n  readonly adjacent: unique symbol;\r\n  /**\r\n   * Operator ALL\r\n   *\r\n   * ```js\r\n   * [Op.gt]: {\r\n   *  [Op.all]: literal('SELECT 1')\r\n   * }\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * > ALL (SELECT 1)\r\n   * ```\r\n   */\r\n  readonly all: unique symbol;\r\n  /**\r\n   * Operator AND\r\n   *\r\n   * ```js\r\n   * [Op.and]: {a: 5}\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * AND (a = 5)\r\n   * ```\r\n   */\r\n  readonly and: unique symbol;\r\n  /**\r\n   * Operator ANY ARRAY (PG only)\r\n   *\r\n   * ```js\r\n   * [Op.any]: [2,3]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * ANY (ARRAY[2, 3]::INTEGER[])\r\n   * ```\r\n   *\r\n   * Operator LIKE ANY ARRAY (also works for iLike and notLike)\r\n   *\r\n   * ```js\r\n   * [Op.like]: { [Op.any]: ['cat', 'hat']}\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * LIKE ANY (ARRAY['cat', 'hat'])\r\n   * ```\r\n   */\r\n  readonly any: unique symbol;\r\n  /**\r\n   * Operator BETWEEN\r\n   *\r\n   * ```js\r\n   * [Op.between]: [6, 10]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * BETWEEN 6 AND 10\r\n   * ```\r\n   */\r\n  readonly between: unique symbol;\r\n  /**\r\n   * With dialect specific column identifiers (PG in this example)\r\n   *\r\n   * ```js\r\n   * [Op.col]: 'user.organization_id'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * = \"user\".\"organization_id\"\r\n   * ```\r\n   */\r\n  readonly col: unique symbol;\r\n  /**\r\n   * Operator <@ (PG array contained by operator)\r\n   *\r\n   * ```js\r\n   * [Op.contained]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * <@ [1, 2)\r\n   * ```\r\n   */\r\n  readonly contained: unique symbol;\r\n  /**\r\n   * Operator @> (PG array contains operator)\r\n   *\r\n   * ```js\r\n   * [Op.contains]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * @> [1, 2)\r\n   * ```\r\n   */\r\n  readonly contains: unique symbol;\r\n  /**\r\n   * Operator LIKE\r\n   *\r\n   * ```js\r\n   * [Op.endsWith]: 'hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * LIKE '%hat'\r\n   * ```\r\n   */\r\n  readonly endsWith: unique symbol;\r\n  /**\r\n   * Operator =\r\n   *\r\n   * ```js\r\n   * [Op.eq]: 3\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * = 3\r\n   * ```\r\n   */\r\n  readonly eq: unique symbol;\r\n  /**\r\n   * Operator >\r\n   *\r\n   * ```js\r\n   * [Op.gt]: 6\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * > 6\r\n   * ```\r\n   */\r\n  readonly gt: unique symbol;\r\n  /**\r\n   * Operator >=\r\n   *\r\n   * ```js\r\n   * [Op.gte]: 6\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * >= 6\r\n   * ```\r\n   */\r\n  readonly gte: unique symbol;\r\n\r\n  /**\r\n   * Operator ILIKE (case insensitive) (PG only)\r\n   *\r\n   * ```js\r\n   * [Op.iLike]: '%hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * ILIKE '%hat'\r\n   * ```\r\n   */\r\n  readonly iLike: unique symbol;\r\n  /**\r\n   * Operator IN\r\n   *\r\n   * ```js\r\n   * [Op.in]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * IN [1, 2]\r\n   * ```\r\n   */\r\n  readonly in: unique symbol;\r\n  /**\r\n   * Operator ~* (PG only)\r\n   *\r\n   * ```js\r\n   * [Op.iRegexp]: '^[h|a|t]'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * ~* '^[h|a|t]'\r\n   * ```\r\n   */\r\n  readonly iRegexp: unique symbol;\r\n  /**\r\n   * Operator IS\r\n   *\r\n   * ```js\r\n   * [Op.is]: null\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * IS null\r\n   * ```\r\n   */\r\n  readonly is: unique symbol;\r\n  /**\r\n   * Operator LIKE\r\n   *\r\n   * ```js\r\n   * [Op.like]: '%hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * LIKE '%hat'\r\n   * ```\r\n   */\r\n  readonly like: unique symbol;\r\n  /**\r\n   * Operator <\r\n   *\r\n   * ```js\r\n   * [Op.lt]: 10\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * < 10\r\n   * ```\r\n   */\r\n  readonly lt: unique symbol;\r\n  /**\r\n   * Operator <=\r\n   *\r\n   * ```js\r\n   * [Op.lte]: 10\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * <= 10\r\n   * ```\r\n   */\r\n  readonly lte: unique symbol;\r\n  /**\r\n   * Operator @@\r\n   *\r\n   * ```js\r\n   * [Op.match]: Sequelize.fn('to_tsquery', 'fat & rat')`\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * @@ to_tsquery('fat & rat')\r\n   * ```\r\n   */\r\n  readonly match: unique symbol;\r\n  /**\r\n   * Operator !=\r\n   *\r\n   * ```js\r\n   * [Op.ne]: 20\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * != 20\r\n   * ```\r\n   */\r\n  readonly ne: unique symbol;\r\n  /**\r\n   * Operator &> (PG range does not extend to the left of operator)\r\n   *\r\n   * ```js\r\n   * [Op.noExtendLeft]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * &> [1, 2)\r\n   * ```\r\n   */\r\n  readonly noExtendLeft: unique symbol;\r\n  /**\r\n   * Operator &< (PG range does not extend to the right of operator)\r\n   *\r\n   * ```js\r\n   * [Op.noExtendRight]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * &< [1, 2)\r\n   * ```\r\n   */\r\n  readonly noExtendRight: unique symbol;\r\n  /**\r\n   * Operator NOT\r\n   *\r\n   * ```js\r\n   * [Op.not]: true\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * IS NOT TRUE\r\n   * ```\r\n   */\r\n  readonly not: unique symbol;\r\n  /**\r\n   * Operator NOT BETWEEN\r\n   *\r\n   * ```js\r\n   * [Op.notBetween]: [11, 15]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT BETWEEN 11 AND 15\r\n   * ```\r\n   */\r\n  readonly notBetween: unique symbol;\r\n  /**\r\n   * Operator NOT LIKE\r\n   *\r\n   * ```js\r\n   * [Op.notEndsWith]: 'hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT LIKE '%hat'\r\n   * ```\r\n   */\r\n  readonly notEndsWith: unique symbol;\r\n  /**\r\n   * Operator NOT ILIKE (case insensitive) (PG only)\r\n   *\r\n   * ```js\r\n   * [Op.notILike]: '%hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT ILIKE '%hat'\r\n   * ```\r\n   */\r\n  readonly notILike: unique symbol;\r\n  /**\r\n   * Operator NOT IN\r\n   *\r\n   * ```js\r\n   * [Op.notIn]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT IN [1, 2]\r\n   * ```\r\n   */\r\n  readonly notIn: unique symbol;\r\n  /**\r\n   * Operator !~* (PG only)\r\n   *\r\n   * ```js\r\n   * [Op.notIRegexp]: '^[h|a|t]'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * !~* '^[h|a|t]'\r\n   * ```\r\n   */\r\n  readonly notIRegexp: unique symbol;\r\n  /**\r\n   * Operator NOT LIKE\r\n   *\r\n   * ```js\r\n   * [Op.notLike]: '%hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT LIKE '%hat'\r\n   * ```\r\n   */\r\n  readonly notLike: unique symbol;\r\n  /**\r\n   * Operator NOT REGEXP (MySQL/PG only)\r\n   *\r\n   * ```js\r\n   * [Op.notRegexp]: '^[h|a|t]'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT REGEXP/!~ '^[h|a|t]'\r\n   * ```\r\n   */\r\n  readonly notRegexp: unique symbol;\r\n  /**\r\n   * Operator NOT LIKE\r\n   *\r\n   * ```js\r\n   * [Op.notStartsWith]: 'hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT LIKE 'hat%'\r\n   * ```\r\n   */\r\n  readonly notStartsWith: unique symbol;\r\n  /**\r\n   * Operator LIKE\r\n   *\r\n   * ```js\r\n   * [Op.notSubstring]: 'hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * NOT LIKE '%hat%'\r\n   * ```\r\n   */\r\n  readonly notSubstring: unique symbol;\r\n  /**\r\n   * Operator OR\r\n   *\r\n   * ```js\r\n   * [Op.or]: [{a: 5}, {a: 6}]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * (a = 5 OR a = 6)\r\n   * ```\r\n   */\r\n  readonly or: unique symbol;\r\n  /**\r\n   * Operator && (PG array overlap operator)\r\n   *\r\n   * ```js\r\n   * [Op.overlap]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * && [1, 2)\r\n   * ```\r\n   */\r\n  readonly overlap: unique symbol;\r\n  /**\r\n   * Internal placeholder\r\n   *\r\n   * ```js\r\n   * [Op.placeholder]: true\r\n   * ```\r\n   */\r\n  readonly placeholder: unique symbol;\r\n  /**\r\n   * Operator REGEXP (MySQL/PG only)\r\n   *\r\n   * ```js\r\n   * [Op.regexp]: '^[h|a|t]'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * REGEXP/~ '^[h|a|t]'\r\n   * ```\r\n   */\r\n  readonly regexp: unique symbol;\r\n  /**\r\n   * Operator LIKE\r\n   *\r\n   * ```js\r\n   * [Op.startsWith]: 'hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * LIKE 'hat%'\r\n   * ```\r\n   */\r\n  readonly startsWith: unique symbol;\r\n  /**\r\n   * Operator << (PG range strictly left of operator)\r\n   *\r\n   * ```js\r\n   * [Op.strictLeft]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * << [1, 2)\r\n   * ```\r\n   */\r\n  readonly strictLeft: unique symbol;\r\n  /**\r\n   * Operator >> (PG range strictly right of operator)\r\n   *\r\n   * ```js\r\n   * [Op.strictRight]: [1, 2]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * >> [1, 2)\r\n   * ```\r\n   */\r\n  readonly strictRight: unique symbol;\r\n  /**\r\n   * Operator LIKE\r\n   *\r\n   * ```js\r\n   * [Op.substring]: 'hat'\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * LIKE '%hat%'\r\n   * ```\r\n   */\r\n  readonly substring: unique symbol;\r\n  /**\r\n   * Operator VALUES\r\n   *\r\n   * ```js\r\n   * [Op.values]: [4, 5, 6]\r\n   * ```\r\n   * In SQL\r\n   * ```sql\r\n   * VALUES (4), (5), (6)\r\n   * ```\r\n   */\r\n  readonly values: unique symbol;\r\n}\r\n\r\n// Note: These symbols are registered in the Global Symbol Registry\r\n//  to counter bugs when two different versions of this library are loaded\r\n//  Source issue: https://github.com/sequelize/sequelize/issues/8663\r\n// This is not an endorsement of having two different versions of the library loaded at the same time,\r\n//  a lot more is going to silently break if you do this.\r\nexport const Op: OpTypes = {\r\n  eq: Symbol.for('eq'),\r\n  ne: Symbol.for('ne'),\r\n  gte: Symbol.for('gte'),\r\n  gt: Symbol.for('gt'),\r\n  lte: Symbol.for('lte'),\r\n  lt: Symbol.for('lt'),\r\n  not: Symbol.for('not'),\r\n  is: Symbol.for('is'),\r\n  in: Symbol.for('in'),\r\n  notIn: Symbol.for('notIn'),\r\n  like: Symbol.for('like'),\r\n  notLike: Symbol.for('notLike'),\r\n  iLike: Symbol.for('iLike'),\r\n  notILike: Symbol.for('notILike'),\r\n  startsWith: Symbol.for('startsWith'),\r\n  notStartsWith: Symbol.for('notStartsWith'),\r\n  endsWith: Symbol.for('endsWith'),\r\n  notEndsWith: Symbol.for('notEndsWith'),\r\n  substring: Symbol.for('substring'),\r\n  notSubstring: Symbol.for('notSubstring'),\r\n  regexp: Symbol.for('regexp'),\r\n  notRegexp: Symbol.for('notRegexp'),\r\n  iRegexp: Symbol.for('iRegexp'),\r\n  notIRegexp: Symbol.for('notIRegexp'),\r\n  between: Symbol.for('between'),\r\n  notBetween: Symbol.for('notBetween'),\r\n  overlap: Symbol.for('overlap'),\r\n  contains: Symbol.for('contains'),\r\n  contained: Symbol.for('contained'),\r\n  adjacent: Symbol.for('adjacent'),\r\n  strictLeft: Symbol.for('strictLeft'),\r\n  strictRight: Symbol.for('strictRight'),\r\n  noExtendRight: Symbol.for('noExtendRight'),\r\n  noExtendLeft: Symbol.for('noExtendLeft'),\r\n  and: Symbol.for('and'),\r\n  or: Symbol.for('or'),\r\n  any: Symbol.for('any'),\r\n  all: Symbol.for('all'),\r\n  values: Symbol.for('values'),\r\n  col: Symbol.for('col'),\r\n  placeholder: Symbol.for('placeholder'),\r\n  join: Symbol.for('join'),\r\n  match: Symbol.for('match'),\r\n} as OpTypes;\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAygBO,MAAM,KAAc;AAAA,EACzB,IAAI,OAAO,IAAI,IAAI;AAAA,EACnB,IAAI,OAAO,IAAI,IAAI;AAAA,EACnB,KAAK,OAAO,IAAI,KAAK;AAAA,EACrB,IAAI,OAAO,IAAI,IAAI;AAAA,EACnB,KAAK,OAAO,IAAI,KAAK;AAAA,EACrB,IAAI,OAAO,IAAI,IAAI;AAAA,EACnB,KAAK,OAAO,IAAI,KAAK;AAAA,EACrB,IAAI,OAAO,IAAI,IAAI;AAAA,EACnB,IAAI,OAAO,IAAI,IAAI;AAAA,EACnB,OAAO,OAAO,IAAI,OAAO;AAAA,EACzB,MAAM,OAAO,IAAI,MAAM;AAAA,EACvB,SAAS,OAAO,IAAI,SAAS;AAAA,EAC7B,OAAO,OAAO,IAAI,OAAO;AAAA,EACzB,UAAU,OAAO,IAAI,UAAU;AAAA,EAC/B,YAAY,OAAO,IAAI,YAAY;AAAA,EACnC,eAAe,OAAO,IAAI,eAAe;AAAA,EACzC,UAAU,OAAO,IAAI,UAAU;AAAA,EAC/B,aAAa,OAAO,IAAI,aAAa;AAAA,EACrC,WAAW,OAAO,IAAI,WAAW;AAAA,EACjC,cAAc,OAAO,IAAI,cAAc;AAAA,EACvC,QAAQ,OAAO,IAAI,QAAQ;AAAA,EAC3B,WAAW,OAAO,IAAI,WAAW;AAAA,EACjC,SAAS,OAAO,IAAI,SAAS;AAAA,EAC7B,YAAY,OAAO,IAAI,YAAY;AAAA,EACnC,SAAS,OAAO,IAAI,SAAS;AAAA,EAC7B,YAAY,OAAO,IAAI,YAAY;AAAA,EACnC,SAAS,OAAO,IAAI,SAAS;AAAA,EAC7B,UAAU,OAAO,IAAI,UAAU;AAAA,EAC/B,WAAW,OAAO,IAAI,WAAW;AAAA,EACjC,UAAU,OAAO,IAAI,UAAU;AAAA,EAC/B,YAAY,OAAO,IAAI,YAAY;AAAA,EACnC,aAAa,OAAO,IAAI,aAAa;AAAA,EACrC,eAAe,OAAO,IAAI,eAAe;AAAA,EACzC,cAAc,OAAO,IAAI,cAAc;AAAA,EACvC,KAAK,OAAO,IAAI,KAAK;AAAA,EACrB,IAAI,OAAO,IAAI,IAAI;AAAA,EACnB,KAAK,OAAO,IAAI,KAAK;AAAA,EACrB,KAAK,OAAO,IAAI,KAAK;AAAA,EACrB,QAAQ,OAAO,IAAI,QAAQ;AAAA,EAC3B,KAAK,OAAO,IAAI,KAAK;AAAA,EACrB,aAAa,OAAO,IAAI,aAAa;AAAA,EACrC,MAAM,OAAO,IAAI,MAAM;AAAA,EACvB,OAAO,OAAO,IAAI,OAAO;AAC3B;",
  "names": []
}
